worker_processes auto;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # Definir la zona de caché
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:10m max_size=1g inactive=60m use_temp_path=off;

    server {
        listen 8080;
        charset utf-8;
        sendfile on;
        server_name _;

        index index.html;
        error_log  /tmp/error.log;
        access_log /tmp/access.log;

        location / {
            root /usr/share/nginx/html/angular/browser/angular/browser;
            expires -1;
            add_header Pragma "no-cache";
            add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
            try_files $uri /index.html =404;
        }

        location /config.json {
            add_header X-Config-Overriden true;
            proxy_pass $CONFIG_ENDPOINT;
            proxy_cache cache;  # Usar la zona de caché definida
            proxy_cache_lock on;  # Si llegan varias peticiones en paralelo, sólo se realiza una al backend
            proxy_cache_valid 200 5m;  # Caché durante 5 minutos para las respuestas 200 del backend
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_403 http_404;  # Mantener el caché incluso si el backend tiene errores
        }
    }
}